/* =========================================================================
 * This file is part of NITRO
 * =========================================================================
 * 
 * (C) Copyright 2004 - 2008, General Dynamics - Advanced Information Systems
 *
 * NITRO is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public 
 * License along with this program; if not, If not, 
 * see <http://www.gnu.org/licenses/>.
 *
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <import/nitf.h>
/* Header for class nitf_Reader */

#ifndef _Included_nitf_Reader
#define _Included_nitf_Reader
#ifdef __cplusplus
extern "C" {
#endif
#undef nitf_Reader_NITF_20
#define nitf_Reader_NITF_20 1L
#undef nitf_Reader_NITF_21
#define nitf_Reader_NITF_21 2L
/*
 * Class:     nitf_Reader
 * Method:    construct
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_nitf_Reader_construct
  (JNIEnv *, jobject);

/*
 * Class:     nitf_Reader
 * Method:    destructMemory
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_nitf_Reader_destructMemory
  (JNIEnv *, jobject);

/*
 * Class:     nitf_Reader
 * Method:    readHeader
 * Signature: (Lnitf/IOHandle;)Lnitf/Record;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_readHeader
  (JNIEnv *, jobject, jobject);

/*
 * Class:     nitf_Reader
 * Method:    read
 * Signature: (Lnitf/IOHandle;)Lnitf/Record;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_read
  (JNIEnv *, jobject, jobject);

/*
 * Class:     nitf_Reader
 * Method:    getNewImageReader
 * Signature: (I)Lnitf/ImageReader;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getNewImageReader
  (JNIEnv *, jobject, jint);

/*
 * Class:     nitf_Reader
 * Method:    getNewGraphicReader
 * Signature: (I)Lnitf/SegmentReader;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getNewGraphicReader
  (JNIEnv *, jobject, jint);

/*
 * Class:     nitf_Reader
 * Method:    getNewTextReader
 * Signature: (I)Lnitf/SegmentReader;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getNewTextReader
  (JNIEnv *, jobject, jint);

/*
 * Class:     nitf_Reader
 * Method:    getNewDEReader
 * Signature: (I)Lnitf/DEReader;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getNewDEReader
  (JNIEnv *, jobject, jint);

/*
 * Class:     nitf_Reader
 * Method:    getInputHandle
 * Signature: ()Lnitf/IOHandle;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getInputHandle
  (JNIEnv *, jobject);

/*
 * Class:     nitf_Reader
 * Method:    getRecord
 * Signature: ()Lnitf/Record;
 */
JNIEXPORT jobject JNICALL Java_nitf_Reader_getRecord
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif

