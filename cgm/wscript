#!/usr/bin/env python
# encoding: utf-8
import os
import Options

def build(bld):
    includes = ['include']
    libname = 'cgm'
    
    lib = bld.new_task_gen('cc', 'staticlib', includes=includes,
                           target='%s-c' % libname,
                           export_incdirs=includes,
                           uselib_local='nitf-c')
    lib.find_sources_in_dirs('./source', excludes=[])
    
    #build tests
    testDir = bld.path.find_dir('tests')
    for test in testDir.find_iter(in_pat=['test*.c'],
                                  maxdepth=1, flat=True).split(' '):
        exe = bld.new_task_gen('cc', 'program', source=test,
                               uselib_local='%s-c' % libname,
                               target=os.path.splitext(test)[0],
                               path=testDir,
                               install_path='${PREFIX}/share/nitf-cgm/tests')
    
    #install headers
    for f in bld.path.find_dir('include').find_iter():
        relpath = f.relpath_gen(bld.path)
        bld.install_files('${PREFIX}/%s' % os.path.dirname(relpath), relpath)
    
    #run doxygen
    if 'DOXYGEN' in bld.env:
        if Options.options.doxygen or Options.is_install:
            bld.new_task_gen(rule='${DOXYGEN}', cwd=bld.path.abspath(), always=True)
        try:
            htmlDocs = bld.path.find_dir('doc/html')
            for f in htmlDocs.find_iter():
                relpath = f.relpath_gen(htmlDocs)
                bld.install_files('${PREFIX}/share/doc/nitf-cgm/c/%s' % relpath, f.abspath())
        except:{}
